This page serves as a list of 'ideas' for student projects for the Google Summer of Code 2008. Feel free to edit and add to this list. Please say who you are when suggesting an idea :)

Sig and Sam ranked these on Thu 28 Feb, to be reviewed again before GSOC08 begins.

===== Of High Interest to SilverStripe =====

=== Blog Module Improvements ** (Sig) ===
  * Issues already in trac.
  * Make it less steps to write blog posts in the CMS, and make the public-facing post submission form more functional (e.g. upload/select images?, preview post?)
  * Trackbacks and other typical features
  * Good support for comment moderation and multiple blogs on a site
  * etc

=== CMS Usability Improvements ** (Sig) ===
  * Sig will form a list of specific issues more or less identical to last year's very successful usability project. Many of these are already in trac, raised by Sig.

=== Performance ** (Sam) ===
  * Decrease CMS Load time to make the user experience quicker and more responsive. (E.g. time to expande tree nodes, add pages, save pages, etc).
  * Provide caching of public-facing pages for high traffic sites
  * Increase Performance of (uncached) framework (both front and back-end use).

=== RESTFul interface and syndication ** ===
  * Generic API for acccessing SilverStripe data (e.g. sitetree, all content, other DB)
  * Could work well with Generic GenericDataAdmin.
  * OAuth?
  * GData (http://code.google.com/apis/gdata/overview.html)

=== Extension manager ** ===
  * Make it easy to add and upgrade new modules
    * Widgets, themes, modules to be added, managed and removed vi a Web based GUI
    * Investigation into security

=== Unit Tests ** ===
  * Translatable
  * Versioned
  * Form
  * ComplexTableField
  * Windmill automated tests


=== E-commerce module ** ===
  * Complete bugs and issues already in trac.
  * More reporting/admin/workflow features
  * Items in stock, discount codes
  * New payment gateways
    * Google Checkout
    * Amazon Checkout
    * Paypal (support could be improved)
    * Authorize.net (code for this has now been submitted)
    * Paystation.co.nz

=== Social Network / Directory Module ** === 

A generic module which lets "members" create an account, create listing within a directory, edit that listing, some sort of billing of members for their listing in the directory.

Think of both the simple end (silverstripe.com members uploading their 'showcase' sites and widgets) through to a sophisticated online social network.

 * Note we have the notion of membersignup form, newsletter system, forum, shopping cart members, blog, etc, and this should fit together somehow.
 * Social Network Portability is a big issue. Can this module let people build social networks that play nicely with each other?


===== Of Interest to SilverStripe =====

=== 3rd party integrations * === 

Provide out of the box integrations with third party software and web services.

  * CRM
    * SurgarCRM
    * Sales Force
    * Highrise
  * Email Marketing
    * Vertical response
    * Mailbuild
  * File conversions
    * Zamzar (no API yet..)


Integration with popular web2.0 applications like a CRM, Wiki

=== Workflow * ===

  * Add better workflow to CMS - action lists, ownership, notification.
  * Automatically generate diagrams which illustrate the workflow process for a given system, and it's security setup.

=== Smart Merge via publishsite * ===

Publishsite is our internal script we use to deploy sites from our testing server, to our productions server. There are a number of things which could be enhanced;

  * Web based interface so users don't need to SSH into a server to deploy code
  * Making publishsite usable by other people could be good.
  * Automatically build CSS sprites - http://ajaxian.com/archives/css-sprite-generator-source-code-released
  * Automatically minimise CSS and JS code
  * Make it easier to sync content on test and production servers

=== Better / Improve search * ===

  * Make search a module, not a tutorial
  * Make it easy to extend
  * Improve PDF and Word searching
  * (Sig) Record and see searched phrases in the admin, so you can see what your visitors are looking for, and improve your website accordingly. 
  * (Sig) Update default installation to include search out of the box?
    * (Sig) Write instructions for theme authors to add search to their themes, so they do this.


=== Filtering of pages * ===
//(Sig) Perhaps this can be folded into 'Usability' project.//

Currently the CMS interface does not deal well with a large (20+) numbers of pages in the same category. The performance is not good, and it's not easy for users to find pages which they want. Two solutions have been proposed; 

  - Adding filters to a page on the tree (ie show only the 5 latest posts, with 'reveal more' button in the tree)
  - Adding the ability to group pages by common attributes on that page type (e.g. split blog posts into year/month)

See http://www.silverstripe.com/site-builders-forum/flat/15416?showPost=24632 for a discussion


=== Migration Tools * ===
Help people transfer content from other platforms to SilverStripe (and the other way around - vendor lock in is bad!)

  * Wordpress <-> SilverStripe
  * Drupal <-> SilverStripe
  * Joomla <-> SilverStripe
  * Static Site -> SilverStripe (Note we have some tool which do this already)

===== Projects that are interesting but have problems with them =====

=== Support URL Hierarchy === 
  * Support for multiple levels for the urls eg blog/article/title or shop/category/product.
  * This will be a complex, deep architecture issue that has to handle upgrading the existing the thousands of websites already using SilverStripe.

  * Problem: Very ambitious. It might be possible to simplify it by only providing this support to the blog and forum module.

 
=== Javascript Validation Improvement ===
  * no direct onsubmit handlers
  * applying of js-rules by classes and data within the markup instead of writing js to <head>
  * no duplication of validation-rules for each field
  * allow validation of multiple forms
  * json-encoded data-responses for client-agnostic logic (instead of relying to call specific methods on the client in evaluated js)

  * Problem: Too deep?



=== Modular rich text editor ===
  * Bbcode, textile

  * Problem: Preference to not have to deal with multiple types of text editor, and favour making WYSIWYG work.

=== File and Asset management ===
  * Revamp of user interface
   * Make it a panel in the Site content
   * Have a thumbnail view (important for images)
   * Get some inspiration from www.fluxiom.com

  * Problem: The existing system seems good enough generally. Lets just do a few 'big wins' in our usability project to make it better, certainly.



=== Easy Themable Backend ===

Make it easy to customize and theme the backend of the CMS in the same way it's possible to theme the main fount end of the websites.

   * Problem: Not a priority.



=== Development Resources ===
Creating intelligent ways to help developers with little to no experience with SilverStripe (or php) start creating functions/forms etc. quickly. This could be also include a development page similar to the SS1 Information Architecture builder and the SS1 Data Report?
 * This could also be done using Firebug integration (as below!!!)

 * Problem: Other things seem to take precedence.

=== Firebug Integration / JS-based developer tool * ===

Make an SilverStripe add on to Firebug to make it life easier for SilverStripe delivers. Some thing which may be useful;

  * A light PHP / Ajax debugger (we may even be able to use http://www.firephp.org/ )
  * The ability to see exactly which templates are generating bits of content on a page (ie select an area of the page, and you find out which template you need to edit to change it in the same way you can inspect the properties of a dom element in firebug)
  * An open source user emailed about this ability: he suggested something like this which has been developed for drupal (http://drupal.org/node/209561) and could be integrated into Firebug for SilverStripe.

  * Some info on extending Firebug this - http://www.firephp.org/Reference/Developers/ExtendingFirebug.htm


 * Problem: Great idea, but other things seem to take precedence.


=== Dashboard Interface for CMS ===

Lets do something more useful with the right hand content area which you see when you first load the CMS.
 * Last edited pages 
 * latest comments 
 * KPI for the site

 * Problem: Great idea, but other things seem to take precedence.



=== Security & Member Area ===

Revamp of user interface & create a better area for managing and removing members accounts (members always exist in the database at the moment). Resources could be drawn on SS1 member management although this wasn't the best system.


  * Problem: The existing system seems good enough generally. Lets just do a few 'big wins' in our usability project to make it better, certainly

=== SilverStripe using 56k version (SilverStripe Lite)===
SilverStripe runs like a dog on a 56k connection.
Maybe an idea would be to create a simpler version (as seen on gmail.com) where the interface is simplified to just include the necessary ingredients to edit a site and a link would appear while the admin area is loading to advise users that if the site is taking a while to load, you can use this link (and then forward them to the link http://www.silverstripe.com/admin/lite/).

I dub thee SilverStripe Lite (c) mandrew 25/2/2008 :-)

  * Problem: Better to spend time reducing load times for people generally, and this will have indirect benefits for those on dialup. We're intending to do this as part of the Performance project.


====== Projects to be done outside of GSOC, by the core team =====

=== Actions and triggers (do internally) ===
Whenever an event (time passes, user does something) or combination of events happen, there a particular action can happen. For example, content is automatically published after at a certain date. Users who login, and are from a particular client, are given a personalized message informing them of a new offer. 

While we can do all this at the moment, it's hidden from the user. The intention of this module is to make it easy for the users to control the dynamic aspects of the site, as such these "dynamic" aspects would be controlled via a user interface, not in the code as they are now.

There are also a number of implications to the CMS workflow. For example, when a user of the group "Authors" saves a page, an email is send out to the group "Approves" to review the content.

With the e-commerce module, it may be that when a order over $1000 goes though, you have a trigger to send an SMS message to the store owner. 

With the forum is may be when a post containing the keyword "bug"is mentioned, an email is sent to the email address of a developer.

If a page is receiving a burst of traffic, an email could be sent to the site owner notifying them.

There are numerous types of triggers and actions which we could support. The difference from what we have now, and what I'm proposing now is that logic behind these triggers and actions is defined by the site administrator, within the CMS, as apposed to being done in code, by the developers.


=== SSViewer / themeing engine improvements. (do internally) ===


=== Database - Referential Integrity (do internally) ===
Increase the robustness of our databases with the addition of Referential Integrity 
http://en.wikipedia.org/wiki/Referential_integrity

====== Stuff for the core team before GSOC08 starts ======
  * Upgrade to prototype 1.6? Decide for higher-level UI layer and/or js-framework
  * Full DB abstraction?
  
====== Other suggestions ======
=== Localization (Ingo) ===
We've tackled i18n in a successful GSOC07 project, the localization is still very much focused on New Zealand though.
  * Change serverside form validation
  * Change display methods in DBField, FormField, ViewableData (date, time, currency)
  * Use PHP5 built-in methods where appropriate
  * Refactor clientside form validation (optimally a library supporting l10n out of the box)
  * Update ecommerce module?

====== Comments ======
  * (Ingo) How about splitting up the UnitTests task into windmill-based frontend-testing and PHPUnit-based backend testing? both together seem like a huge task for a single person. This assumes that we have testable frontend-logic thats not going to be refactored in 2008 - Sam?
  * (Ingo) Multipe RTEs (quote: "Preference to not have to deal with multiple types of text editors") - i agree we don't want to support multiple js-editors, but it would be great to have support for text-only editors like textile. this could also greatly help performance by reducing javascript footprint and computing time.
  * (Ingo) I'd see "Better / Improve search" and "Filtering of pages" higher priority than "Social Network / Directory Module"
  * (Ingo) I'm assuming we're ressourcing "Javascript Validation Improvement" internally very soon, if we don't have time for it that should definetly be a high priority GSOC task