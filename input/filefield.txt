====== FileField ======
Allows the user to upload a file.

{{:filefield.png|:filefield.png}}


==== Example use ====
If you want to implement a [[FileField]] into a form element, you need to pass it an array of source data.

<code php>
new FileField (
   $name = "cv",
   $title = "Upload your CV"
)
</code>

=== Using in a custom form ===
This shows an example of form->email, attaching the uploaded file to the email.

Remember to be careful of where you send emails, and how frequently site visitors may send them; make sure your site can't be used to spam people.  Also be careful of passing on files received.

<code php>
class ExampleForm_Controller extends Page_Controller {

	/**
	 * Display the form.
	 * Use in a template, by:  $Form
	 * @return Form
	 */
	public function Form() {
		$fields = new FieldSet(
				new TextField('Name'),
				new EmailField('Email'),
				new FileField('File')
				);
		$actions = new FieldSet(
				new FormAction('Upload', 'Upload file')
				);
		$validator = new RequiredFields('Name', 'Email');

		return new Form($this, 'Form', $fields, $actions, $validator);
	}

	/**
	 * Process the form data
	 */
	function Upload($data, $form)
		// NB: $to should NEVER come from $data without checking.
		$to = 'uploads@example.com';
		$subject = 'Uploaded file from form';

		$email = new Email(null, $to, $subject);

		$email->setTemplate('ExampleForm_Email');
		$email->populateTemplate($data);

		$data = $form->getData();
		if (isset($data['File'])) {
			$file = $data['File'];
			if (file_exists($file['tmp_name'])) {
		 		// TODO: Attempt to check the mime type or extension, size, etc. before just sending on.
				$email->attachFile($file['tmp_name'], $file['name']);
			}
		}
		$email->send();
		Session::set('FileUploaded', true);
		Director::redirectBack();
	}
}

</code>
 
==== API documentation ====
[[http://api.silverstripe.org/trunk/forms/fields-files/FileField.html|Click here for the API documentation]]. 