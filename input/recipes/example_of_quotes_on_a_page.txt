====== Quotes ======

What we are aiming for: A way in the CMS to add as many quotes as we want using a ComplexTableField then retrieve this list of quotes on the homepage.

===== Step 1. Create a Quote 'Object' =====

We want to be able to make as many 'Quotes' in the system as we want, so we need to create a 'Quote' object which consists of a 'Author' and a 'QuoteText'.

** mysite/code/Quote.php **
<code php>
<?php

class Quote extends DataObject {
	
	static $db = array(
		'Author' => 'Varchar(200)',
		'QuoteText' => 'Text'
	);
	
}
?>
</code>
 
Save your file and rebuild the database. As you can see we have made a 'Quote' DataObject with our 2 Database fields.

===== Step 2. Add the Relation. =====

A Page is going to **have many** quotes and a quote is going to **have one** page to exist on. So we need to define this on both Page.php and Quote.php

** mysite/code/Page.php **
<code php>
// add this inside the Page class. Not the Page_Controller.
// This says 'This Page has many 'Quotes' of type 'Quote'.  
	static $has_many = array(
		'Quotes' => 'Quote' 
	);
</code>

** mysite/code/Quote.php **
<code php>
// add this after the static $db = array() bit
// This says 'This Quote has one Page of type Page.
        static $has_one = array(
		'Page' => 'Page'
	);
</code>


===== Step 3. Add An Editing Panel in the CMS =====

For this situation, when we want to dynamically create fields and remove fields in the CMS we have to use something called a 'TableField'. Now theres quite a few different versions you can use. Read this tutorial for more information - http://doc.silverstripe.com/doku.php?id=tutorial:5-dataobject-relationship-management . But what we want to do is add a 'HasManyComplexTableField' to the Page class. This will create a table on each page where we can add quotes.

** mysite/code/Page.php **
<code php>
// this has to go in the Page class. Not the Page_Controller.
// This adds a 'HasManyTableField' to a 'Quotes' tab in the CMS.
	function getCMSFields() {
		$fields = parent::getCMSFields();
		$tablefield = new HasManyComplexTableField(
			$this,
			'Quotes',
		    'Quote',
		    array(
			    'Author' => 'Author',
			    'QuoteText' => 'Quote Text'
		    ),
		    'getCMSFields_forPopup'
	);
		$tablefield->setAddTitle( 'A Quote' );

		$fields->addFieldToTab( 'Root.Content.Quotes', $tablefield );
		return $fields;
}
</code>

Im not going to explain all that you can view the tutorial for an indepth instruction manual on it but now if you reload the CMS you should see a 'Quotes' tab in your Content section. But wait! It doesn't work just yet. You have to define 1 more thing! The Fields you need to edit for each Quote - the getCMSFields_forPopup function on the Quote object

** mysite/code/Quote.php **
<code php>
// add this after the static $has_one...
	function getCMSFields_forPopup() {
		return new FieldSet(
			new TextField('Author'),
			new TextareaField('QuoteText')
		);
	}
</code>

Adding this to the quote object tells SilverStripe what fields it should add to the editing pane. Now if you refresh your CMS and view the Quotes table you should be able to 'create dynamic fields' or add extra quotes as needed in the CMS. 

===== Last Step. Show the Quotes =====

Last step! You have done so well to follow so far, now that hopefully everything works and you can add quotes in the CMS all you need to do is display them!. Now you can add them to any of your template files. Ive added this just for laughs underneath the $Content 

** themess/blackcandy/templates/Layout/Page.ss (about line 15) **
<code html>
	<% control Quotes %>
		<p>$Author - $QuoteText</p>
	<% end_control %>
</code>

If your quotes aren't showing up make sure they are ticked in the CMS table. (on the Left of the Author) Then Resave the page. This caught me out :D.

===== Appendix =====

==== Example Code ====
{{:recipes:quoterecipe.zip|:recipes:quoterecipe.zip}}
==== Reference ====
  * http://doc.silverstripe.com/doku.php?id=tutorial:5-dataobject-relationship-management
  * http://doc.silverstripe.com/doku.php?id=hasmanycomplextablefield
  * http://doc.silverstripe.com/doku.php?id=complextablefield

