====== Upgrading 2.4.0 ======

In preparation for the pending release of 2.4.0 the following page contains all the information you need to know about the changes that have been undertaken.

This page **doesn't include new features of 2.4.0** as such, just functionality that has changed or been removed since 2.3.

You can view the full changelogs on trac:

  * http://open.silverstripe.org/wiki/ChangeLog/2.4.0-rc3
  * http://open.silverstripe.org/wiki/ChangeLog/2.4.0-rc2
  * http://open.silverstripe.org/wiki/ChangeLog/2.4.0-rc1
  * http://open.silverstripe.org/wiki/ChangeLog/2.4.0-beta2
  * http://open.silverstripe.org/wiki/ChangeLog/2.4.0-beta1
  * http://open.silverstripe.org/wiki/ChangeLog/2.4.0-alpha1
====== How to Upgrade ======
Before you start upgrading you should always backup your site directory and the database. Once you have a backup made remove the ''cms/'', ''sapphire/'' and ''jsparty/'' folders then copy in the new ''cms/'' and ''sapphire/'' folders from your 2.4 download.


====== Upgrading Notes ======

===== Removed jsparty =====
The rather unorganised top level ''jsparty/'' folder has been removed from the core distribution and files separated to ''cms/thirdparty'' and ''sapphire/thirdparty''. If your custom code referred to files in ''jsparty'' you will have to update the links to the new location (either ''sapphire/thirdparty/'' or ''cms/thirdparty/''). 

Thirdparty files which aren't used in any core features have also been removed such as jquery-validate. If you reference any files at all from ''jsparty'' you should double check your paths.

===== Removed Classes =====

As part of our effort to tidy the core product we have removed several classes which we believed didn't warrant inclusion in the official release. They either were out of date functionality or superseded or just didn't justify inclusion. Where needed we have moved the files to individual modules. Also note several field types which were due for deprecating have been kept due to use within the CMS (''UniqueTextField'', ''UniqueRestrictedTextField''). These however are going to be removed for the next major release.

^ Class name ^ Comment ^
|''AjaxFormAction''| |
|''BankAccountField''|moved to [[http://open.silverstripe.org/browser/modules/formfields_nz|formfields_nz]] module|
|''CalendarDateField''|use ''DateField'' with ''setConfig('showcalendar', true)'', moved to [[http://open.silverstripe.org/browser/modules/legacydatetimefields/trunk|legacydatetimefields]] module|
|''CompositeDateField'', ''DMYDateField''| use ''DateField'' with ''setConfig('dmyfields', true)'', moved to [[http://open.silverstripe.org/browser/modules/legacydatetimefields/trunk|legacydatetimefields]] module|
|''ConfirmedFormAction''| |
|''DMYDateField''| |
|''DropdownTimeField''|use ''TimeField'' with ''setConfig('showdropdown', true)'', moved to [[http://open.silverstripe.org/browser/modules/legacydatetimefields/trunk|legacydatetimefields]] module|
|''Email_Template''|use ''Email'' instead|
|''GhostPage''| |
|''GSTNumberField''|moved to [[http://open.silverstripe.org/browser/modules/formfields_nz|formfields_nz]] module|
|''HiddenFieldGroup''| |
|''PDODatabase''| |
|''PermissionDropdownField''| |
|''PopupDateTimeField''|use ''DatetimeField'', moved to [[http://open.silverstripe.org/browser/modules/legacydatetimefields/trunk|legacydatetimefields]] module|
|''ReportField''| |
|''TypeDropdown''| |


Some date/time field implementations were completely refactored, and their old implementations moved to the [[http://open.silverstripe.org/browser/modules/legacydatetimefields/trunk|legacydatetimefields]] module:

^ Class name ^ Comment ^
|''LegacyDateField''|old version of ''DateField'', renamed to avoid conflicts with new ''DateField''|
|''LegacyTimeField''|old version of ''TimeField'', renamed to avoid conflicts with new ''TimeField''|

===== Removed Libraries =====

==== SWFUpload ====
SWFUpload has been removed from the core package due to ongoing issues with supporting it. The CMS Content Editors upload has been rewritten to use jQuery so no 2.3 functionality has been lost but if your module made use of this library, then you will need to bundle it within your module. Related files which have been removed as a side effect of this - ''Upload.js'', ''TinyMCEImageEnhancements.js'', ''SWF_Upload.js'' and ''CMSMain_Upload.js''.
===== Renamed Classes =====

We undertook some major work to reduce classname conflicts. Some classes have been namespaced with 'SS' to reduce conflicts with other code. A couple notes - even though the classes have been renamed to ''SS_<ClassName>'' the class is still contained within the ''ClassName.php'' file (no ''SS_'' prefix)


^ Original class name ^ New class name ^
| ''Report'' | ''SS_Report'' |
| ''HTTPRequest'' | ''SS_HTTPRequest'' |
| ''HTTPResponse'' | ''SS_HTTPResponse'' |
| ''HTTPResponse_Exception'' | ''SS_HTTPResponse_Exception'' |
| ''Database'' | ''SS_Database'' |
| ''Query'' | ''SS_Query'' |
| ''SSDateTime'' | ''SS_Datetime'' |
| ''Backtrace'' | ''SS_Backtrace'' |
| ''Cli'' | ''SS_Cli'' |
| ''Log'' | ''SS_Log'' |
| ''LogEmailWriter'' | ''SS_LogEmailWriter'' |
| ''LogErrorEmailFormatter'' | ''SS_LogErrorEmailFormatter'' |
| ''LogErrorFileFormatter'' | ''SS_LogErrorFileFormatter'' |
| ''LogFileWriter'' | ''SS_LogFileWriter'' |
| ''ZendLog'' | ''SS_ZendLog'' |
| ''HTMLValue'' | ''SS_HTMLValue'' |

===== Changes =====
==== Nested URLs enabled by default ====

When using our installer, the "nested URLs" feature will be enabled by default by a setting in //mysite/_config.php// (see [[http://www.silverstripe.org/preview-of-silverstripe-2-4-hierarchical-urls-a-developer-community-contribution/|blog post]]). You can enable it manually for existing websites. Existing URLs will automatically change to the nested format without republication (your old URLs should redirect automatically).

<code php>
SiteTree::enable_nested_urls();
</code>

==== SiteTree->Link() instead of SiteTree->URLSegment ====

Relating to the "nested URLs" feature, all //SiteTree// URLs should be accessed via //SiteTree->Link()// instead of using the property //SiteTree->URLSegment// directly.
==== Removed SiteTree::$add_action ====
''$add_action'' on Pages has been removed. If you want to define your own custom title for pages then you use "<myclassname>.TITLE" in the i18n language tables instead or define your add action using ''singular_name()''

<code php>
// using the lang tables
$lang['en_US']['RedirectorPage']['TITLE'] = "Redirector Page";


// using singular_name()
function singular_name() { return "Redirector Page"; }
</code>

==== Removed dev/reset ====

Use ''dev/tests/startsession'' to create a new temporary database, or custom database tools like phpMyAdmin to completely drop a database.


==== Registering reports through SS_Report::register() ====
Removed ''ReportAdmin->getReportClassNames()'' in favour of ''SS_Report::register()'' to add custom reports to the CMS (see [[http://open.silverstripe.org/changeset/98175|r98175]], [[http://open.silverstripe.org/changeset/98215|r98215]])

<code php>
// in your _config file
SS_Report::register("SideReport", "SideReport_NameOfReport");
</code>
==== Fulltext Search and Indexes disabled by default ====

As of SilverStripe  2.4.0, no search engine is included by default. If you want to use a search engine, you should enable it with this command in your _config.php:

<code php>
FulltextSearchable::enable();
</code>

This will add a //SearchForm()// and //results()// method in your //Page_Controller//, as well as set up common fields like SiteTree.Content to be indexed.

Note: Results may vary with database drivers other than //MySQLDatabase//. 
==== Object Extension Instances ====

When working with extension instances directly on the extended object, please use the new //getExtensionInstances()// getter. You need to manually call //setOwner($this)// before using the instance. 

Base setup:
<code php>
class MyExtension extends Extension {
  function myExtensionMethod() { // ... }
}
Object::add_extension('MyObject', 'MyExtension');
</code>

Wrong:
<code php>
class MyObject extends DataObject {
  function myExtensionMethod() {
    $ext = $this->extension_instances['MyExtension'];
    return $ext->myExtensionMethod();
  }
}
</code>

Right:
<code php>
class MyObject extends DataObject {
  function myExtensionMethod() {
    $ext = $this->getExtensionInstance('MyExtension');
    $ext->setOwner($this);
    $ext->myExtensionMethod();
  }
}
</code>
==== HTMLEditorField (TinyMCE) stores content as UTF8 instead of HTML Entities ====

Prior to 2.4.0, the TinyMCE JavaScript library would store a subset of special characters as HTML entities (see [[http://wiki.moxiecode.com/index.php/TinyMCE:Configuration/entities|TinyMCE Configuration]]). SilverStripe expects UTF8 for user input in the CMS, database storage as well as output. We have made this behaviour more consistent by converting the TinyMCE entities back into UTF8 for database storage. 
==== MySQL character set to UTF8 on new installations ====

The MySQL character set for SilverStripe used to be the database default (often "latin1", sometimes "utf8"). While all textual database columns created by SilverStripe have been storing their content as "utf8" already in earlier releases, MySQL fulltext search might not return the desired results with special characters (see [[http://open.silverstripe.org/ticket/3582|#3582]]).

For new installations with a MySQL database backend, this will be set automatically to "utf8" by the installer in //mysite/_config.php//. For existing sites built with SilverStripe 2.3, add the following code to your //mysite/_config.php//.

<code php>
MySQLDatabase::set_connection_charset('utf8');
</code>

No conversion of existing database schemas or content should be necessary.

==== MySQL 5.0+ or newer required ====

See [[:server-requirements]].

===== API Additions =====

==== BASE_PATH constant ====
Use ''BASE_PATH'' and ''BASE_URL'' instead of data from ''$_SERVER'' to calculate the base script path.

===== Interface Changes =====

==== "Site Content" tab renamed to "Pages" ====

The headlines of the left-hand tree panels have been changed accordingly.

===== Data Migration issues =====

==== Files and Images ====

Existing files and images inside the Assets folder may not be displayed when you visit the 'Files & Images' tab in the CMS.  If you get an error message when clicking through the folders in the site tree, this can be resolved by deleting the content in the 'File' table in the database, and then clicking the 'Look for new files' button.

==== User-defined forms ====

If you get errors in the User-define forms module, check that there is no column called 'CustomParameter' present in either of the 'EditableFormField', 'EditableFormField_Live' or 'EditableFormField_versions' tables.

You need to login to your database management system (for example phpmyadmin) and delete the 'CustomParameter' column from the EditableFormField table.