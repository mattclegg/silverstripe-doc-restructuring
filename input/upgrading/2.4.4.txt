====== Upgrading 2.4.4 ======
===== Changelogs =====

 * http://open.silverstripe.org/wiki/ChangeLog/2.4.4-rc1

===== Upgrading Notes =====

==== If you're using open_basedir in PHP: ====

There is a bug in 2.4.4 which breaks open_basedir restriction.

The issue has been fixed in the development 2.4 branch, but you'll need to patch your existing copy of SilverStripe 2.4.4 if this affects you. The error usually occurs when you try logging into the CMS.

It can be fixed by patching your working copy with this change: http://open.silverstripe.org/changeset/115314

==== Security: SQL information disclosure in MySQLDatabase  =====

=== Description ===

The 'showqueries' GET parameter shows all performed SQL queries in the page output.
This is intended functionality, but should be limited websites not being in "live mode"
(set through Director::set_environment_type(), checked through Director::isLive()).
By adding an 'ajax' GET parameter you can circumvent this live check.

See Secunia Advisory: http://secunia.com/advisories/42346/

=== Solution ===

Don't circumvent Director::isLive() check in MySQLDatabase

=== Impact ===

Information disclosure of potentially sensitive information through SQL query strings.

=== Reported by ===

Andrew Lord, Nathaniel McHugh

=== Patches ===

  * trunk: http://open.silverstripe.org/changeset/114782
  * 2.4: http://open.silverstripe.org/changeset/114783






==== Security: XSS in controller handling for missing actions ====

=== Description ===

Controller routing in SilverStripe core doesn't encode
error messages for missing URL actions before returning
them to the user (see Controller->handleAction()).

This can be reproduced with any URL that doesn't
have custom error handling defined through RequestHandler::$url_handlers,
which includes all core controllers.

Reproduce with the following URL:
<code>http://<your-host>/Security/%3Cvideo%20src=1%20onerror=%22alert%281%29%22%3E;;</code>

See Secunia Advisory: http://secunia.com/advisories/42346/

=== Solution ===

Force Content-Type: text/plain upon output.

=== Impact ===

Attackers can craft URLs to change the displayed website behaviour
as well as gain access to authenticated cookie information.
In case the victim has a permanent login cookie ("Remember me" checkbox),
this can lead to CMS access for attackers.

=== Reported by ===

Tim Suter, Andrew Horton (http://security-assessment.com)

=== Patches ===

  * trunk: http://open.silverstripe.org/changeset/114444
  * 2.4: http://open.silverstripe.org/changeset/114751







==== Security: SQL injection with Translatable extension enabled ====

=== Description ===

Locale setter methods on i18n and Translatable classes are not sanitizing or whitelisting input,
which can lead to SQL injection based on "locale" GET parameters. This behaviour
is limited to websites having the (built-in) Translatable extension activated.

=== Solution ===

Sanitize locale values in Translatable->augmentSQL() and whitelist
locale values in i18n setters.

=== Impact ===

High

=== Affected Versions === 

  * SilverStripe trunk
  * SilverStripe 2.4.3 or older
  * SilverStripe 2.3.9 or older

=== Provided by ===

Pavol Ondras

=== Patches ===

  * trunk: http://open.silverstripe.org/changeset/114515
  * 2.4: http://open.silverstripe.org/changeset/114516
  * 2.3: http://open.silverstripe.org/changeset/114517








==== Security: Version number information disclosure ====

SilverStripe exposes version information through
static files located in the webroot. As these files
have no extension, they are served without processing
by most webserver default configurations.

The files are:
sapphire/silverstripe_version
cms/silverstripe_version

See http://open.silverstripe.org/ticket/5031
See http://secunia.com/advisories/42346/

=== Solution ===

Reject web requests to version information through .htaccess for Apache, and web.config for IIS.

=== Impact ===

Version Information about the product can be used to craft attacks more specifically.

=== Reported by ===

Robert Mac Neil

=== Patches ===

  * trunk: http://open.silverstripe.org/changeset/114774 http://open.silverstripe.org/changeset/114770
  * 2.4: http://open.silverstripe.org/changeset/114774 http://open.silverstripe.org/changeset/114771
  * 2.3: http://open.silverstripe.org/changeset/114776 http://open.silverstripe.org/changeset/114772





==== Security: Weak entropy in tokens for CSRF protection, autologin, "forgot password" emails and password salts ====

SilverStripe uses rand(), mt_rand() in combination with
uniqid(), substr() and time() to create pseudo-random tokens.
Due to the nature of these implementations, the entropy
of tokens is low, potentially exposing them to brute force attacks.

Affected functionality:

  * CSRF form protection
  * Member Autologin
  * "Forgot Password" emails
  * Autogenerated salt values for hashed passwords in the Member table

=== Solution ===

Use the best available PRNG implementation on the current platform
and PHP version (favouring MCRYPT_DEV_URANDOM and openssl_random_pseudo_bytes()).

=== Impact ===

Weak entropy can be used for more successful brute force attacks.

=== Reported by ===

Andrew Horton (http://security-assessment.com)

=== Patches ===

  * trunk: http://open.silverstripe.org/changeset/114497 http://open.silverstripe.org/changeset/114498 http://open.silverstripe.org/changeset/114503 http://open.silverstripe.org/changeset/114504 http://open.silverstripe.org/changeset/114505

  * 2.4: http://open.silverstripe.org/changeset/114499 http://open.silverstripe.org/changeset/114500 http://open.silverstripe.org/changeset/114506 http://open.silverstripe.org/changeset/114507

  * 2.3: http://open.silverstripe.org/changeset/114501 http://open.silverstripe.org/changeset/114502 http://open.silverstripe.org/changeset/114509







==== Security: HTTP referer leakage on Security/changepassword ====

=== Description ===

The Security/changepassword URL action can be invoked with a temporary
token stored against the member record ("AutoLoginHash"). This token is set
when a member requests a new password by email through Security/lostpassword,
and cleared upon successful password change.

The token is passed as a GET parameter, which can expose it to HTTP referer
leakage, in case the member decides to navigate away from the "change password" form
before submitting the form (which would invalidate the token). 
If the clicked link is an external page, the (still valid) GET parameter will appear
in the external site's HTTP referer logs, enabling third parties to take over
user accounts.

Note: This is only a problem when Security/changepassword is used without being logged-in.

=== Solution ===

Redirect from Security/changepassword/?h=XXX to Security/changepassword
and store the token in session instead.

=== Impact ===

Takeover of user accounts by third parties with access to HTTP referer logs.

=== Provided By ===

Andrew Lord

=== Patches ===

  * trunk: http://open.silverstripe.org/changeset/114758
  * 2.4: http://open.silverstripe.org/changeset/114760
  * 2.3: http://open.silverstripe.org/changeset/114763







==== Security: CSRF protection bypassed when handling form action requests through controller ====

=== Description ===

The built-in CSRF protection on forms in SilverStripe can be bypassed
by routing the action through the controller instead of the form.

Protected: mycontroller/MyForm/?action_doSubmit=1

Unprotected: mycontroller/action_doSubmit

Note: Does not apply to manual CSRF protection in controller actions
through SecurityToken->check().

=== Solution ===

Developers are encouraged to use Controller::$allowed_actions to limit the
actions accessible through URL routing. Methods that need automatic CSRF
protection (most form actions) should NOT be included in $allowed_actions,
their protection is handled through request handling in the form class itself.

See [[security#limiting_url-access_to_controller_methods|security]] documentation for more details.

=== Impact ===

Exposes various administrative actions (creating a new page, reverting to draft)
to CSRF attacks, in case attackers know the URL a victim has a valid CMS login for.

=== Provided By ===

Ingo Schommer

=== Patches ===

  * trunk: http://open.silverstripe.org/changeset/115182 http://open.silverstripe.org/changeset/115185
  * 2.4: http://open.silverstripe.org/changeset/115189 http://open.silverstripe.org/changeset/115188
  * 2.3: http://open.silverstripe.org/changeset/115200 http://open.silverstripe.org/changeset/115191
